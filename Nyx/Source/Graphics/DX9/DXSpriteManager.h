/********************************************************************************
*
*  The MIT License
*
* Copyright (c)2010 -  t.hayamizu
*
*以下に定める条件に従い、本ソフトウェアおよび関連文書のファイル（以下「ソフトウェア」）の複製を取得するすべての人に対し、ソフトウェ
*アを無制限に扱うことを無償で許可します。これには、ソフトウェアの複製を使用、複写、変更、結合、掲載、頒布、サブライセンス、および/ま
*たは販売する権利、およびソフトウェアを提供する相手に同じことを許可する権利も無制限に含まれます。
*
*上記の著作権表示および本許諾表示を、ソフトウェアのすべての複製または重要な部分に記載するものとします。
*
*ソフトウェアは「現状のまま」で、明示であるか暗黙であるかを問わず、何らの保証もなく提供されます。ここでいう保証とは、商品性、特定の目*的への適合性、および権利非侵害についての保証も含みますが、それに限定されるものではありません。 作者または著作権者は、契約行為、不法
*行為、またはそれ以外であろうと、ソフトウェアに起因または関連し、あるいはソフトウェアの使用またはその他の扱いによって生じる一切の請
*求、損害、その他の義務について何らの責任も負わないものとします。 
********************************************************************************/
#ifndef NYX_CORE_INCLUDED_DIRECT_GRAPHICS_SPRITE_MANAGER_H_
#define NYX_CORE_INCLUDED_DIRECT_GRAPHICS_SPRITE_MANAGER_H_

#include "Graphics/DX9/DXSprite.h"
namespace Nyx {
	namespace DX9 {

		//前方宣言
		class Nyx::DX9::DXSprite;
		class Nyx::DX9::DirectGraphicsDevice;

		///スプライトの管理クラス
		class DXSpriteManager {
			typedef std::vector<DXSprite*> DXSpriteContainer;
		public:
			static const int defaultCapacity;
			/**
			*
			*/

			DXSpriteManager();
			/**
			*
			*/
			DXSpriteManager(int capacity);
			/**
			*
			*/
			~DXSpriteManager() ;
			/**
			*
			*/
			bool Load(DirectGraphicsDevice& device, tstring fileName, int width, int height, int cw=0, int ch=0);
			/**
			*
			*/
			int Add(DXSprite* sprite);
			/**
			*
			*/
			void Release();
			/**
			*@note
			* このメソッドを使うと、メモリにキャッシュされたデータを元に、テクスチャを再生することができる。<br/>
			* ただし、DXSpriteクラスは、メモリストレージクラスにD3DPOOL_MANAGEDを使用しているため、明示的にレストアする必要
			* はない<br/>
			* デバイスロストした場合には、DirectGraphicsDeviceのOnLostDeviceメソッドでDirect3DDeviceをリセットするときに
			* 次のようにすればよい<br/>
			* spriteManager->OnLostDevice();<br/>
			* if (device->OnLosteDevice()) {<br/>
			*    sprite->OnReset();<br/>
			*}<br/>
			*このメソッドを使う場合には、次のようにするとよい<br/>
			* spriteManager->Release();<br/>
			* if (device->OnLostDevice()) {<br/>
			* spriteManager->Restore();<br/>
			*}<br/>
			* ただし、どちらの方法もマルチモニタには対応していない。マルチモニタの場合、まれに失敗することがある
			*/
			void Restore(DirectGraphicsDevice& device);
			/**
			*
			*/
			void Clear();
			/**
			*
			*/
			bool OnResetDevice();
			/**
			*
			*/
			bool OnLostDevice();
			DXSprite* GetSprite(size_t index);
		private:
			bool LoadFromFile(DirectGraphicsDevice& device, tstring fileName, int w, int h, int cw, int ch);
			bool LoadFromPackedFile(DirectGraphicsDevice& device, tstring fileName, int w, int h, int cw, int ch);

		private:
			DXSpriteContainer spriteContainer;
		};
	}
}
#endif